<?xml version="1.0" encoding="utf-8"?>
<TestSuite
	xmlns:tei="http://www.tei-c.org/ns/1.0"
	xmlns:j="http://jewishliturgy.org/ns/jlptei/1.0"
	xmlns:jx="http://jewishliturgy.org/ns/jlp-processor"
  xmlns:http="http://expath.org/ns/http-client">
  <suiteName>Operations on elements</suiteName>
  <description>
  	<p>Test the element API</p>
  	<author>Efraim Feinstein</author>
  </description>
  <asUser>testuser</asUser>
  <password>testuser</password>
  <setup>
    <code><![CDATA[
      apitest:post("/code/api/data/original", 
        apitest:auth-header(),
        doc("/code/tests/api/data/original/navel-test.xml")
        ),
      apitest:clear()
    ]]></code>
  </setup>
  <tearDown>
    <remove-collection 
      collection="/group/testuser/original" />
  </tearDown>
  <namespace prefix="html">http://www.w3.org/1999/xhtml</namespace>
  <namespace prefix="tei">http://www.tei-c.org/ns/1.0</namespace>
  <namespace prefix="j">http://jewishliturgy.org/ns/jlptei/1.0</namespace>
  <namespace prefix="jx">http://jewishliturgy.org/ns/jlp-processor</namespace>
  <imports>
    import module namespace httpclient="http://exist-db.org/xquery/httpclient";
    import module namespace apitest="http://jewishliturgy.org/modules/apitest"
      at "xmldb:exist:///code/tests/api/apitest.xqm";
    import module namespace resp="http://jewishliturgy.org/modules/resp"
      at "xmldb:exist:///code/modules/resp.xqm";
  </imports>
  <TestSet>
  	<testName>GET with authentication</testName>
    <setup>
      <code><![CDATA[
        apitest:login()
      ]]></code>
    </setup>
    <tearDown>
      <code><![CDATA[
        apitest:clear()
      ]]></code>
    </tearDown>
    <test>
      <task>GET with HTML accept header, document does not exist</task>
      <code><![CDATA[
        apitest:get("/code/api/data/original/DoesNotExist/tei.TEI", 
          <header name="Accept" value="application/xhtml+xml"/>)
      ]]></code>
      <class href="../../common.t.xml#NotFound"/> 
    </test>
    <test>
      <task>GET with HTML accept header, element does not exist</task>
      <code><![CDATA[
        apitest:get("/code/api/data/original/Test%20Document/tei.TEI/tei.noexist", 
          <header name="Accept" value="application/xhtml+xml"/>)
      ]]></code>
      <class href="../../common.t.xml#NotFound"/>
    </test>
  	<test>
  	  <task>GET with HTML accept header</task>
  	  <code><![CDATA[
        apitest:get("/code/api/data/original/Test%20Document/tei.TEI", 
          <header name="Accept" value="application/xhtml+xml"/>)
      ]]></code>
      <class href="../../common.t.xml#SelfConsistentApiList"/> 
      <class href="../../common.t.xml#Testing"/> 
    </test>
    <test>
      <task>GET with XML accept header</task>
      <code><![CDATA[
      apitest:get("/code/api/data/original/Test%20Document/tei.TEI", 
        <header name="Accept" value="application/xml"/>)
      ]]></code>
      <xpath desc="returns HTTP status code 200">./@statusCode = 200</xpath>
      <xpath desc="returns the requested element">exists(.//httpclient:body/tei:TEI)</xpath> 
    </test>
  </TestSet>
  <TestSet>
    <testName>GET without authentication</testName>
    <test>
      <task>GET with HTML accept header</task>
      <code><![CDATA[
          apitest:get("/code/api/data/original/Test%20Document/tei.TEI", 
            <header name="Accept" value="application/xhtml+xml"/>)
      ]]></code>
      <class href="../../common.t.xml#NotFound"/> 
    </test>
    <test>
      <task>GET with XML accept header</task>
      <code><![CDATA[
      apitest:get("/code/api/data/original/Test%20Document/tei.TEI", 
        <header name="Accept" value="application/xml"/>)
      ]]></code>
      <class href="../../common.t.xml#NotFound"/>
    </test>
  </TestSet>
  <TestSet>
    <testName>GET with authentication as a different user</testName>
    <setup>
      <code><![CDATA[
      apitest:login("testuser2", "testuser2")
      ]]></code>
    </setup>
    <tearDown>
      <code><![CDATA[
      apitest:clear()
      ]]></code>
    </tearDown>
    <test>
      <task>GET with HTML accept header</task>
      <code><![CDATA[
          apitest:get("/code/api/data/original/Test%20Document/tei.TEI", 
            <header name="Accept" value="application/xhtml+xml"/>)
      ]]></code>
      <class href="../../common.t.xml#NotFound"/> 
    </test>
    <test>
      <task>GET with XML accept header</task>
      <code><![CDATA[
      apitest:get("/code/api/data/original/Test%20Document/tei.TEI", 
        <header name="Accept" value="application/xml"/>)
      ]]></code>
      <class href="../../common.t.xml#NotFound"/>
    </test>
  </TestSet>
  <TestSet>
    <testName>POST with authentication</testName>
    <setup>
      <code><![CDATA[
      apitest:login()
      ]]></code>
    </setup>
    <tearDown>
      <code><![CDATA[
      apitest:clear()
      ]]></code>
    </tearDown>
    <test>
      <task>POST text</task>
      <code><![CDATA[
      apitest:post("/code/api/data/original/Test%20Document/.../tei.w,1",
        (), "test")
      ]]></code>
      <xpath desc="return status code 201">./@statusCode = 201</xpath>
      <xpath desc="the text content has been appended">ends-with(doc("/group/testuser/original/Test%20Document.xml")/id("w1"),"test")</xpath>
      <xpath desc="the user is given responsibility credit for authorship">
      ((:ends-with(resp:query(
          doc("/group/testuser/original/Test%20Document.xml")/id('w1'), 
          "author")/@resp, "#testuser")
      )):))</xpath>
    </test>
    <test>
      <task>POST XML</task>
      <code><![CDATA[ 
      apitest:post("/code/api/data/original/Test%20Document/.../j.repository",
        (), <tei:seg xml:lang="en">Test</tei:seg>)
      ]]></code>
      <xpath desc="return status code 201">./@statusCode = 201</xpath>
      <xpath desc="the XML has been added to the document">count(doc("/group/testuser/original/Test%20Document.xml")//j:repository/tei:seg)=2</xpath>
      <xpath desc="the XML has been assigned an @xml:id">exists(doc("/group/testuser/original/Test%20Document.xml")//tei:seg[.="Test"]/@xml:id)</xpath>
      <xpath desc="a Location header is returned">exists(.//httpclient:header[@name="Location"])</xpath>
    </test>
    <test>
      <task>POST XML with a duplicated xml:id</task>
      <code><![CDATA[
      apitest:post("/code/api/data/original/Test%20Document/.../j.repository", (),
        <tei:seg xml:id="r_1" xml:lang="en">Test</tei:seg>)
      ]]></code>
      <xpath desc="return status code 400">./@statusCode = 400</xpath>
    </test>
    <test>
      <task>POST an invalid XML element into the selection</task>
      <code><![CDATA[
      apitest:post("/code/api/data/original/Test%20Document/.../j.selection", (),
        <tei:seg xml:id="r2" xml:lang="en">Test</tei:seg>)
      ]]></code>
      <xpath desc="return status code 400">./@statusCode = 400</xpath>
    </test>
  </TestSet>
  <TestSet>
    <testName>POST without authentication</testName>
    <test>
      <task>POST text</task>
      <code><![CDATA[ 
      apitest:post("/code/api/data/original/Test%20Document/.../tei:w,1",
        (), "text")
      ]]></code>
      <class href="../../common.t.xml#NotFound"/>
    </test>
  </TestSet>
  <TestSet>
    <testName>POST authenticated as a different user</testName>
    <setup>
      <code><![CDATA[
      apitest:login("testuser2", "testuser2")
      ]]></code>
    </setup>
    <tearDown>
      <code><![CDATA[
      apitest:clear()
      ]]></code>
    </tearDown>
    <test>
      <task>POST text</task>
      <code><![CDATA[
      apitest:post("/code/api/data/original/Test%20Document/.../tei:w,1",
        (), "text")
      ]]></code>
      <class href="../../common.t.xml#NotFound"/>
    </test>
  </TestSet>
  <TestSet>
    <testName>PUT without authentication</testName>
    <test>
      <task>PUT XML</task>
	  <code><![CDATA[
        apitest:put("/code/api/data/original/Test%20Document/.../tei:w,1", 
          (), 
          <tei:w xml:lang="en">Test</tei:w>)
	  ]]></code>
      <class href="../../common.t.xml#NotFound"/> 
    </test>
  </TestSet>
  <TestSet>
    <testName>PUT with authentication as a different user</testName>
    <setup>
      <code><![CDATA[
      apitest:login("testuser2", "testuser2")
      ]]></code>
    </setup>
    <tearDown>
      <code><![CDATA[
      apitest:clear()
      ]]></code>
    </tearDown>
    <test>
      <task>PUT XML</task>
      <code><![CDATA[
        apitest:put("/code/api/data/original/Test%20Document/.../tei:w,1", 
          (), 
          <tei:w xml:lang="en">Test</tei:w>)
	  ]]></code>
      <class href="../../common.t.xml#NotFound"/>
    </test>
  </TestSet>
  <TestSet>
    <testName>PUT with authentication</testName>
    <setup>
      <code><![CDATA[
      apitest:login()
      ]]></code>
    </setup>
    <tearDown>
      <code><![CDATA[
      apitest:clear()
      ]]></code>
    </tearDown>
    <test serialize="method=text">
      <task>PUT an element of the same type as the original</task>
      <code><![CDATA[
        apitest:put("/code/api/data/original/Test%20Document/.../tei.w,1", 
          (), 
          <tei:w xml:lang="en">Replaced</tei:w>)
      ]]></code>
      <xpath desc="returns status code 204">./@statusCode = 204</xpath>
      <xpath desc="element has been replaced">doc("/group/testuser/original/Test%20Document.xml")//tei:w = "Replaced"</xpath>
      <xpath desc="new element has an xml:id">exists(doc("/group/testuser/original/Test%20Document.xml")//tei:w[.="Replaced"]/@xml:id)</xpath> 
    </test>
    <test>
      <task>PUT an element of a different type from the original</task>
      <code><![CDATA[
        apitest:put("/code/api/data/original/Test%20Document/.../tei.w,1", 
          (), 
          <tei:p xml:lang="en">Replaced</tei:p>)
      ]]></code>
      <xpath desc="returns status code 400">./@statusCode = 400</xpath> 
    </test>
    <test>
      <task>PUT an element with a new id where the replaced element is externally referenced</task>
      <code><![CDATA[
        apitest:put("/code/api/data/original/Test%20Document/.../j.view@div/tei.div,1/tei.ptr,1", 
          (), 
          <tei:ptr xml:id="newdiv" target="#se1"/>)
      ]]></code>
      <xpath desc="returns status code 400">./@statusCode = 400</xpath>
    </test>
    <test>
      <task>PUT an element where the replaced element's child is externally referenced</task>
      <code><![CDATA[
        apitest:put("/code/api/data/original/Test%20Document/.../j.view@div/tei.div,1", 
          (), 
          <tei:div xml:lang="en"><tei:ptr target="#se1"/></tei:div>)
      ]]></code>
      <xpath desc="returns status code 400">./@statusCode = 400</xpath>
    </test>
  </TestSet>
  <!-- 
  <TestSet>
    <testName>DELETE without authentication</testName>
    <test>
	  <task>DELETE</task>
	  <code><![CDATA[
        apitest:delete("/code/api/data/original/Test%20Document", ())
	  ]]></code>
      <class href="../../common.t.xml#NotFound"/> 
	</test>
  </TestSet>
  <TestSet>
    <testName>DELETE with authentication as a different user</testName>
    <setup>
      <code><![CDATA[
      apitest:login("testuser2", "testuser2")
      ]]></code>
    </setup>
    <tearDown>
      <code><![CDATA[
      apitest:clear()
      ]]></code>
    </tearDown>
    <test>
      <task>DELETE</task>
      <code><![CDATA[
          apitest:delete("/code/api/data/original/Test%20Document", ())
      ]]></code>
      <class href="../../common.t.xml#NotFound"/> 
    </test>
  </TestSet>
  <TestSet>
    <testName>DELETE with authentication</testName>
    <setup>
      <code><![CDATA[
      apitest:login()
      ]]></code>
    </setup>
    <tearDown>
      <code><![CDATA[
      apitest:clear()
      ]]></code>
    </tearDown>
    <test>
      <task>DELETE</task>
      <code><![CDATA[
          apitest:delete("/code/api/data/original/Test%20Document", ())
      ]]></code>
      <xpath desc="returns status code 204">./@statusCode = 204</xpath>
      <xpath desc="document has been removed">not(doc-available("/group/testuser/original/Test%20Document.xml"))</xpath> 
    </test>
  </TestSet>
  <TestSet>
    <testName>DELETE an element that is referenced by another document</testName>
    <setup>
      <code><![CDATA[
      apitest:login(),
      apitest:post("/code/api/data/original", (), 
        doc("/code/tests/api/data/original/navdoc-test-referee.xml")),
      apitest:post("/code/api/data/original", (), 
        doc("/code/tests/api/data/original/navdoc-test-reference.xml"))
      ]]></code>
    </setup>
    <tearDown>
      <code><![CDATA[
      apitest:clear()
      ]]></code>
    </tearDown>
    <test>
      <task>DELETE</task>
      <code><![CDATA[
        apitest:delete("/code/api/data/original/Referee", ())
      ]]></code>
      <xpath desc="returns status code 400">./@statusCode = 400</xpath>
      <xpath desc="object contains reference to where the document is referenced">.//object/reference = "/code/api/data/original/Referencing%20Document"</xpath> 
    </test>
  </TestSet>
   -->
</TestSuite>